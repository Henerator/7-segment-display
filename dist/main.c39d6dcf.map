{"version":3,"sources":["display/classes/display-element-group.class.ts","display/classes/display.class.ts","display/models/element-segment-state.enum.ts","display/models/index.ts","display/classes/element-segment.class.ts","display/classes/element.class.ts","display/classes/index.ts","main.ts"],"names":[],"mappings":"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","file":"main.c39d6dcf.map","sourceRoot":"..\\src","sourcesContent":["import { Size, Point } from '../../helpers/geometric';\r\nimport { DisplayElement } from './index';\r\n\r\nexport class DisplayElementGroup {\r\n    private elements: DisplayElement[];\r\n\r\n    constructor(position: Point, segmentSize: Size, elementPadding: number) {\r\n\r\n        const firstElement = new DisplayElement(position, segmentSize);\r\n        const secondElement = new DisplayElement({\r\n            x: position.x + firstElement.width + elementPadding,\r\n            y: position.y,\r\n        }, segmentSize);\r\n\r\n        this.elements = [\r\n            firstElement, \r\n            secondElement,\r\n        ];\r\n    }\r\n\r\n    draw(context: CanvasRenderingContext2D) {\r\n        this.elements.forEach(element => {\r\n            element.draw(context);\r\n        });\r\n    }\r\n\r\n    turnOff() {\r\n        this.elements.forEach(element => element.turnOff());\r\n    }\r\n\r\n    setValue(value: number) {\r\n        const digits = this.getValueDigits(value);\r\n\r\n        this.elements.forEach((element, index) => {\r\n            element.setValue(digits[index] || 0);\r\n        });\r\n    }\r\n\r\n    private getValueDigits(value: number): number[] {\r\n        return `0${value}`.slice(-2)\r\n            .split('')\r\n            .map(digit => Number.parseInt(digit));\r\n    }\r\n}","import { DisplayOptions } from '../models';\r\nimport { DisplayElementGroup } from './display-element-group.class';\r\nimport { Point } from '../../helpers/geometric/models';\r\n\r\n\r\nexport class Display {\r\n    private groups: DisplayElementGroup[];\r\n\r\n    constructor(options: DisplayOptions) {\r\n        const position = options.position;\r\n\r\n        const segmentSize = options.segmentSize;\r\n        const secondSegmentSize = options.secondSegmentSize;\r\n\r\n        const elementWidth = options.segmentSize.width + options.segmentSize.height;\r\n        const elementHeight = 2 * options.segmentSize.width + options.segmentSize.height;\r\n        const elementPadding = options.elementPadding;\r\n        const elemengGroupWidth = 2 * elementWidth + elementPadding;\r\n\r\n        const secondElementHeight = 2 * options.secondSegmentSize.width + options.secondSegmentSize.height;\r\n        const secondElementPadding = options.secondElementPadding;\r\n\r\n        const hoursGroupPosition = <Point>{\r\n            x: position.x - elemengGroupWidth - 1.5 * elementPadding,\r\n            y: position.y,\r\n        };\r\n\r\n        const minutesGroupPosition = <Point>{\r\n            x: position.x + 1.5 * elementPadding,\r\n            y: position.y,\r\n        };\r\n        const secondsGroupPosition = <Point>{\r\n            x: position.x + elemengGroupWidth + 4.5 * elementPadding,\r\n            y: position.y +  elementHeight / 2 - secondElementHeight / 2,\r\n        };\r\n\r\n        this.groups = [\r\n            new DisplayElementGroup(hoursGroupPosition, segmentSize, elementPadding),\r\n            new DisplayElementGroup(minutesGroupPosition, segmentSize, elementPadding),\r\n            new DisplayElementGroup(secondsGroupPosition, secondSegmentSize, secondElementPadding),\r\n        ];\r\n    }\r\n\r\n    draw(context: CanvasRenderingContext2D) {\r\n        this.groups.forEach(group => {\r\n            group.draw(context);\r\n        });\r\n    }\r\n\r\n    setTime() {\r\n        this.groups.forEach(group => group.turnOff());\r\n\r\n        const now = new Date();\r\n        const hours = now.getHours();\r\n        const minutes = now.getMinutes();\r\n        const seconds = now.getSeconds();\r\n\r\n        this.groups[0].setValue(hours);\r\n        this.groups[1].setValue(minutes);\r\n        this.groups[2].setValue(seconds);\r\n    }\r\n}","export enum ElementSegmentState {\r\n    Off,\r\n    On,\r\n}","export * from './display-options.model';\r\nexport * from './element-segment-state.enum';","import { Point, Size } from '../../helpers/geometric/models';\r\nimport { ElementSegmentState } from '../models';\r\n\r\n\r\nexport class ElementSegment {\r\n    private segmentPoints: Point[] = [];\r\n\r\n    constructor(\r\n        public position: Point,\r\n        public size: Size,\r\n        public angle: number,\r\n        public state: ElementSegmentState = ElementSegmentState.Off\r\n    ) {\r\n        this.generateSegmentPoints(size);\r\n    }\r\n\r\n    draw(context: CanvasRenderingContext2D) {\r\n        context.save();\r\n\r\n        context.translate(this.position.x, this.position.y);\r\n        context.rotate(this.angle);\r\n\r\n        if (this.state === ElementSegmentState.On) {\r\n            context.shadowColor = '#fff';\r\n            context.shadowBlur = 12;\r\n            context.fillStyle = '#eee';\r\n        } else {\r\n            context.fillStyle = '#373737';\r\n        }\r\n\r\n        context.beginPath();\r\n        const points = this.segmentPoints.slice();\r\n        const startPoint = <Point>points.shift();\r\n        context.moveTo(startPoint.x, startPoint.y);\r\n\r\n        while (points.length > 0) {\r\n            const nextPoint = <Point>points.shift();\r\n            context.lineTo(nextPoint.x, nextPoint.y);\r\n        }\r\n        context.fill();\r\n\r\n        context.restore();\r\n    }\r\n\r\n    private generateSegmentPoints(segmentSize: Size) {\r\n        const width = segmentSize.width;\r\n        const height = segmentSize.height;\r\n\r\n        this.segmentPoints = [\r\n            { x: 0, y: 0 },\r\n            { x: height / 2, y: -height / 2 },\r\n            { x: width - height / 2, y: -height / 2 },\r\n            { x: width, y: 0 },\r\n            { x: width - height / 2, y: height / 2 },\r\n            { x: height / 2, y: height / 2 },\r\n            { x: 0, y: 0 },\r\n        ];\r\n    }\r\n}","import { Point, Size } from '../../helpers/geometric/models';\r\nimport { ElementSegment } from './element-segment.class';\r\nimport { ElementSegmentState } from '../models/element-segment-state.enum';\r\n\r\n\r\nexport class DisplayElement {\r\n    private position: Point;\r\n    private segmentSize: Size;\r\n    private segments: ElementSegment[] = [];\r\n\r\n    private states = [\r\n        {\r\n            value: 0,\r\n            activeSegments: [0, 1, 2, 3, 4, 5],\r\n        },\r\n        {\r\n            value: 1,\r\n            activeSegments: [1, 2],\r\n        },\r\n        {\r\n            value: 2,\r\n            activeSegments: [0, 1, 3, 4, 6],\r\n        },\r\n        {\r\n            value: 3,\r\n            activeSegments: [0, 1, 2, 3, 6],\r\n        },\r\n        {\r\n            value: 4,\r\n            activeSegments: [1, 2, 5, 6],\r\n        },\r\n        {\r\n            value: 5,\r\n            activeSegments: [0, 2, 3, 5, 6],\r\n        },\r\n        {\r\n            value: 6,\r\n            activeSegments: [0, 2, 3, 4, 5, 6],\r\n        },\r\n        {\r\n            value: 7,\r\n            activeSegments: [0, 1, 2],\r\n        },\r\n        {\r\n            value: 8,\r\n            activeSegments: [0, 1, 2, 3, 4, 5, 6],\r\n        },\r\n        {\r\n            value: 9,\r\n            activeSegments: [0, 1, 2, 3, 5, 6],\r\n        },\r\n    ];\r\n\r\n    get width(): number {\r\n        return this.segmentSize.width + this.segmentSize.height;\r\n    }\r\n\r\n    constructor(position: Point, segmentSize: Size) {\r\n        this.segmentSize = segmentSize;\r\n\r\n        const width = segmentSize.width;\r\n        this.position = {\r\n            x: position.x,\r\n            y: position.y - segmentSize.width - segmentSize.height / 2,\r\n        };\r\n\r\n        this.segments = [\r\n            new ElementSegment({ x: 0, y: 0 }, segmentSize, 0),\r\n            new ElementSegment({ x: width, y: 0 }, segmentSize, Math.PI / 2),\r\n            new ElementSegment({ x: width, y: width }, segmentSize, Math.PI / 2),\r\n            new ElementSegment({ x: 0, y: 2 * width }, segmentSize, 0),\r\n            new ElementSegment({ x: 0, y: width }, segmentSize, Math.PI / 2),\r\n            new ElementSegment({ x: 0, y: 0 }, segmentSize, Math.PI / 2),\r\n            new ElementSegment({ x: 0, y: width }, segmentSize, 0),\r\n        ];\r\n    }\r\n\r\n    draw(context: CanvasRenderingContext2D) {\r\n        const height = this.segmentSize.height;\r\n\r\n        context.save();\r\n        context.translate(this.position.x + height / 2, this.position.y + height / 2);\r\n\r\n        const sortedSegments = this.segments.slice().sort((a, b) => {\r\n            return (a.state < b.state)\r\n                ? -1\r\n                : 1;\r\n        });\r\n\r\n        sortedSegments.forEach(segment => {\r\n            segment.draw(context);\r\n        });\r\n\r\n        context.restore();\r\n    }\r\n\r\n    setValue(value: number) {\r\n        this.turnOff();\r\n\r\n        const state = this.states.find(st => st.value === value)\r\n            || this.states[0];\r\n        state.activeSegments.forEach(index => {\r\n            this.segments[index].state = ElementSegmentState.On;\r\n        });\r\n    }\r\n\r\n    turnOff() {\r\n        this.segments.forEach(segment => segment.state = ElementSegmentState.Off);\r\n    }\r\n}","export * from './display.class';\r\nexport * from './element.class';\r\nexport * from './display-element-group.class';\r\nexport * from './element-segment.class';","import { Display } from './display/classes';\r\nimport { Point } from './helpers/geometric/models';\r\n\r\nconst canvas = <HTMLCanvasElement>document.getElementById('canvas');\r\nconst context = <CanvasRenderingContext2D>canvas.getContext('2d');\r\n\r\nlet width: number;\r\nlet height: number;\r\nlet centerPoint: Point;\r\n\r\nlet display: Display;\r\n\r\nwindow.addEventListener('resize', resizeCanvas, false);\r\n\r\nresizeCanvas();\r\ncreateDisplay();\r\nupdateDisplay();\r\n\r\nfunction updateDisplay() {\r\n    clear();\r\n\r\n    display.setTime();\r\n    display.draw(context);\r\n\r\n    setTimeout(() => updateDisplay(), 1000);\r\n}\r\n\r\nfunction resizeCanvas() {\r\n    width = window.innerWidth;\r\n    height = window.innerHeight;\r\n\r\n    canvas.width = width;\r\n    canvas.height = height;\r\n\r\n    centerPoint = {\r\n        x: width / 2,\r\n        y: height / 2,\r\n    };\r\n\r\n    createDisplay();\r\n}\r\n\r\nfunction clear() {\r\n    context.fillStyle = '#333';\r\n    context.fillRect(0, 0, width, height);\r\n}\r\n\r\nfunction createDisplay() {\r\n    display = new Display({\r\n        position: centerPoint,\r\n        segmentSize: { width: 100, height: 25 },\r\n        secondSegmentSize: { width: 25, height: 6 },\r\n        elementPadding: 20,\r\n        secondElementPadding: 5,\r\n    });\r\n}\r\n"]}